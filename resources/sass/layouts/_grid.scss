// CUSTOM FLOAT GRID SYSTEM

.container {
    width: 100%;
    padding-right: 1.5rem;
    padding-left: 1.5rem;
    margin-right: auto;
    margin-left: auto;

    // 600px / 16 = 37.5em
    @include respond(phone){max-width: 60rem;}

    // 800px / 16 = 50em
    //@include respond(tab-port){max-width: 72rem;}
   

     // 1000px / 16 = 56.25em
    @include respond(tab-land){max-width: 96rem;}

    // 1200px / 16 = 75em
    @include respond(big-desktop){max-width: 114rem;}

}



  

// NEW GRID

.container:after,
.row:after{
    content: "";
    display: table;
    clear: both;
}

//[class^="Col-"]
[class^='col-'] {
    float: left;
    padding: 1%;
    min-height: .1rem;
    width: 100%;
    display: inline-block;
}

// SMALL BREAKPOINT
@media #{$breakpoint-small}{
    

    @for $i from 1 through $grid-columns {
        .col-sm-#{$i} {
            width: 100%;
        }
    }
}

// MEDIUM BREAKPOINT

@media #{$breakpoint-midium}{
   

    @for $i from 1 through $grid-columns {
        .col-md-#{$i} {
           //width: calc((100% - #{$gutter-horizontal}) / #{$grid-columns} * #{$i});
          width: 100% / $grid-columns * $i;
           
          
        }
    }
}

// EXTRA LARGE BREAKPOINT

@media #{$breakpoint-xl}{

    @for $i from 1 through $grid-columns {
        .col-xl-#{$i} {
            //width: calc((100% - #{$gutter-horizontal}) / #{$grid-columns} * #{$i});
        width: 100% / $grid-columns * $i;
           
        }
    }
}


// OLD GRID

.Row{

    margin: 0 auto;

    &:not(:last-child) {
        margin-bottom: $gutter-vertical-small;

        @include respond(tab-land){
            margin-bottom: $gutter-vertical;
        }
    }

    @include clearfix;

    [class^="Col-"] {
        float: left;
        width: 100%;
        margin-bottom: $gutter-vertical;

        &:not(:last-child){
            @include respond(tab-land){
                margin-right: $gutter-horizontal;
            }
            
        }
        

    }

    @include respond(tab-land){
        // CALC FUNCTION 
        .Col-1-of-2{
        width: calc((100% - #{$gutter-horizontal}) / 2);
        }

        .Col-1-of-3{
            width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
        }

        .Col-1-of-4{
            width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
        }

        .Col-1-of-5{
            width: calc((100% - 4 * #{$gutter-horizontal}) / 5);
        }

        .Col-2-of-3{
            width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
        }

        .Col-2-of-4{
            width: calc( 2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
        }

        .Col-3-of-4{
            width: calc( 3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal});
        }
    }


}





//////////////////////////////////////////////////////////////////////////////////////////////////////////
///////// FLEXBOX GRID SYSTEM

/////// Flexbox grid with gutter

$base-gutter: 2em;
$bp-small: 540px;
$bp-medium: 800px;
$bp-large: 1160px;
$bp-xlarge: 1440px;

// Column widths for grid mixin
$colset: (
	col-1-5: percentage(1/5),
	col-2-5: percentage(2/5),
	col-3-5: percentage(3/5),
	col-4-5: percentage(4/5),
	col-1-4: percentage(1/4),
	col-1-2: percentage(1/2),
	col-3-4: percentage(3/4),
	col-1-3: percentage(1/3),
	col-2-3: percentage(2/3)
);
// Grid mixin
@mixin gridset($bp, $colset) {
	@each $colwidth, $width in $colset {
		.#{$bp}-#{$colwidth} { max-width: $width; }
	}
}

.grid-row {
  
	@media (min-width: $bp-small) {
    display: flex;
    flex-wrap: wrap;
    box-sizing: border-box;
    margin-left: -($base-gutter/2);
    margin-right: -($base-gutter/2);
    
    > * {
      box-sizing: border-box;
      padding-left: $base-gutter/2;
      padding-right: $base-gutter/2;
    }
  }
}

@media (min-width: $bp-small) {
  @include gridset('sm', $colset);
}
@media (min-width: $bp-medium) {
  @include gridset('md', $colset);
}
@media (min-width: $bp-large) {
  @include gridset('lg', $colset);
}
@media (min-width: $bp-xlarge) {
  @include gridset('xl', $colset);
}






.content-wrap {
  
  //max-width: 80em;
  margin-left: auto;
  margin-right: auto;
}

[class*='Col-'] {
  padding-bottom: $base-gutter;
  
}





// Flexbox grid with no gatter

.flex-container{
    width: calc(100% - 10em);
    max-width: 60em;
    margin: 0 auto;
}
  
  
div[class^="Col-"]{
    padding: 1rem 0;
    text-align: center;
}
  

.flex-row{
    display: flex;
    flex-wrap: wrap;
}
  

$columns: 12;

@for $i from 1 through $columns{
    .col-#{$i}{
        flex: 0 0 100% / $columns * $i
    }
    
  .col-offset-#{$i}{
    margin-left: 100% / $columns * $i

  }
   
}
  
    


